BEGIN_OPTIONS
	Workflow "Unlit"
	Tags { "Queue" = "Transparent" }
END_OPTIONS

BEGIN_PASS("All")
	Blend One One
	Cull Off
	ZWrite Off
END_PASS

BEGIN_PROPERTIES
	_MainTex("Main Tex", 2D) = "white" {}
	_Color("Color", Color) = (1, 1, 1, 1)
	_FadePower("Fade Power", Float) = 1
	_ClipPower("Clip Power", Float) = 1
	_WorldPosition("World Position", Vector) = (0, 0, 0)

	_DetailTex("Detail Tex", 2D) = "white" {}
	_DetailScale("Detail Scale", Vector) = (0, 0, 0)
	_DetailOffset("Detail Offset", Vector) = (0, 0, 0)
	_DetailStrength("Detail Strength", Float) = 0.1
END_PROPERTIES

BEGIN_DEFINES
	#pragma multi_compile_local __ _FADE_EDGE
	#pragma multi_compile_local __ _CLIP_NEAR
	#pragma multi_compile_local __ _DISTORT
	#pragma multi_compile_local __ _DETAIL
END_DEFINES

BEGIN_SUBSHADERS
	"../../Shared/Shaders/SGT_Matrix.surfshader"
	"../../Shared/Shaders/SGT_Output.surfshader"
END_SUBSHADERS

BEGIN_CBUFFER
	sampler2D _MainTex;
	float4    _Color;
	float3    _WorldPosition;
	float     _FadePower;
	float     _ClipPower;

	sampler2D _DistortTex;
	float2    _DistortScale;
	float2    _DistortOffset;
	float     _DistortStrength;

	sampler2D _DetailTex;
	float2    _DetailScale;
	float2    _DetailOffset;
	float     _DetailStrength;
END_CBUFFER

BEGIN_CODE
	void ModifyVertex(inout VertexData v, inout ExtraV2F e)
	{
		float3 wcam = _WorldSpaceCameraPos;
		float4 wpos = SGT_O2W(v.vertex);

		v.texcoord0.z = v.texcoord1.x;

		#if _FADE_EDGE
			float3 cam2vertM = normalize(wcam - wpos.xyz);
			float3 normalM   = normalize(mul((float3x3)UNITY_MATRIX_M, v.normal));

			v.texcoord0.w = pow(abs(dot(cam2vertM, normalM)), _FadePower);
		#endif

		#if _CLIP_NEAR
			v.texcoord1.xyz = normalize(_WorldPosition - wpos.xyz);
			v.texcoord2.xyz = normalize(_WorldPosition - wcam);
		#endif
	}

	void SurfaceFunction(inout Surface o, inout ShaderData d)
	{
		float  scaledDist = d.texcoord0.x;
		float  scaledEdge = d.texcoord0.y / d.texcoord0.z;
		float2 uv         = float2(scaledDist, scaledEdge);

		#if _DISTORT
			float distort = tex2D(_DistortTex, uv * _DistortScale - _DistortOffset).a - 0.5f;
			uv.y += distort * _DistortStrength * uv.x;
		#endif

		float4 finalColor = tex2D(_MainTex, uv) * _Color;

		#if _DETAIL
			float detail = tex2D(_DetailTex, uv * _DetailScale - _DetailOffset).a - 0.5f;
			finalColor.rgb += saturate(detail * _DetailStrength) * finalColor.rgb;
		#endif

		#if _FADE_EDGE
			finalColor *= d.texcoord0.w;
		#endif

		#if _CLIP_NEAR
			float fadeNear = saturate(dot(d.texcoord1.xyz, d.texcoord2.xyz));

			finalColor *= pow(1.0f - fadeNear, _ClipPower);
		#endif

		OutputWithAlpha(o, ModifyUnlitOutput(finalColor));
	}
END_CODE